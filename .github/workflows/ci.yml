name: CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate package manager consistency
        run: ./scripts/validate-package-managers.sh

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup development environment
        run: make ci-setup

      - name: Cache pytest
        uses: actions/cache@v4
        with:
          path: |
            .pytest_cache
            logs
          key: pytest-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            pytest-${{ runner.os }}-${{ matrix.python-version }}-
            pytest-${{ runner.os }}-

      - name: Run quality pipeline
        run: make quality

      - name: Validate CLI functionality
        run: |
          # Test CLI is available and working
          proxywhirl --help
          
          # Test basic CLI commands
          proxywhirl list --help
          proxywhirl health-report --help
          
          echo "✅ CLI validation passed"

      - name: Test package build
        run: |
          # Build package
          uv build
          
          # Verify build outputs
          ls -la dist/
          echo "Built packages:"
          find dist/ -name "*.whl" -o -name "*.tar.gz"
          
          # Test installation in clean environment
          uv tool install dist/*.whl --force
          proxywhirl --version
          
          echo "✅ Package build and installation test passed"

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ matrix.python-version }}
          path: |
            logs/coverage/
            logs/report.html
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            logs/pytest-logs.txt
          retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install test dependencies
        run: uv sync --group test

      - name: Run security audit
        run: |
          # Check for known security vulnerabilities
          uv run --with pip-audit pip-audit --desc --format=json --output=security-audit.json || true

      - name: Upload security audit
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit
          path: security-audit.json
          retention-days: 30

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [quality]
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-integration'))
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Setup development environment
        run: make ci-setup

      - name: Run integration tests
        run: |
          uv run pytest -m "integration" --verbose --tb=short
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            logs/
          retention-days: 7
